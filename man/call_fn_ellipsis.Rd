% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam-call-fn-ellipsis.R
\name{call_fn_ellipsis}
\alias{call_fn_ellipsis}
\title{Safely call a function using ellipsis}
\usage{
call_fn_ellipsis(FUN, ...)
}
\arguments{
\item{FUN}{\code{function} that should be called with arguments in \code{...}}

\item{...}{arguments are passed to \code{FUN()} in safe manner.}
}
\value{
output from \code{FUN()} when called with relevant named arguments
from ellipsis \code{...}
}
\description{
Safely call a function using ellipsis
}
\details{
This function is a wrapper function intended to help
pass ellipsis arguments \code{...} from a parent function
to an external function in a safe way. It will only
include arguments from \code{...} that are recognized by
the external function.

The logic is described as follows:
\itemize{
\item When the external function \code{FUN} arguments \code{formals()} include
ellipsis \code{...}, then the ellipsis \code{...} will be passed as-is without
change. In this way, any arguments inside the original ellipsis \code{...}
will either match arguments in \code{FUN}, or will be ignored in that
function ellipsis \code{...}.
\item When the external function \code{FUN} arguments \code{formals()} do not
include ellipsis \code{...}, then named arguments in \code{...} are passed
to \code{FUN} only when the arguments names are recognized by \code{FUN}.
}

Note that arguments therefore must be named.
}
\examples{
new_mean <- function(x, trim=0, na.rm=FALSE) {
   mean(x, trim=trim, na.rm=na.rm)
}
x <- c(1, 3, 5, NA);
new_mean(x, na.rm=TRUE);
# throws an error as expected (below)
# new_mean(x, na.rm=TRUE, color="red");

call_fn_ellipsis(new_mean, x=x, na.rm=TRUE, color="red")
# throws an error as expected (below)
# call_fn_ellipsis(new_mean, x=x, color="red")

}
\seealso{
Other jam utility functions: 
\code{\link{reload_rmarkdown_cache}()}
}
\concept{jam utility functions}
