% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-plots.r
\name{minorLogTicks}
\alias{minorLogTicks}
\title{Calculate major and minor tick marks for log-scale axis}
\usage{
minorLogTicks(ax = NULL, lims = NULL, logBase = 10,
  displayBase = logBase, majorN = 5, minorN = logBase, minorWhich = c(1,
  2, 5), whichTicks = seq_len(displayBase), minTick = NULL,
  maxTick = NULL, asValues = TRUE, labelValueOffset = 0,
  symmetricZero = (labelValueOffset > 0), col = "black", col.ticks = col,
  combine = FALSE, logAxisType = c("normal", "flipped", "pvalue"),
  verbose = FALSE, ...)
}
\value{
List of axis tick positions, and corresponding labels, for major
and minor ticks. Major ticks are defined as one tick per log10
unit, exponentiated. For example, 1, 10, 100, 1000.
}
\description{
Calculate major and minor tick marks for log-scale axis
}
\details{
This function calculates log units for the axis of an
existing base R plot. It
calculates appropriate tick and label positions for major
steps, which are typically in log steps; and minor steps, whic
are typically a subset of steps at one lower log order.
For example, log 10 steps would be: \code{c(1, 10, 100, 1000)},
and minor steps would be \code{c(2, 5, 20, 50, 200, 500, 2000, 5000)}.

This function was motivated in order to label log-transformed
data properly in some special cases, like using \code{log2(1+x)}
where the resulting values are shifted "off by one" using
standard log-scaled axis tick marks and labels.

Also, when using log fold change values, this function
creates axis labels which indicate negative fold change
values, for example \code{-2} in log2 fold change units would
be labeled with fold change \code{-4}, and not \code{0.0625} which
represents a fractional value.

Use the argument \code{symmetricZero=TRUE} when using directional
log fold change values.
}
\examples{
## This example shows how to draw axis labels manually,
## but the function minorLogTicksAxis() is easier to use.
xlim <- c(0,4);
nullPlot(xlim=xlim, doMargins=FALSE);
mlt <- minorLogTicks(1,
   logBase=10,
   labelValueOffset=1,
   minTick=0);
maj <- subset(mlt$allLabelsDF, type \%in\% "major");
axis(1, las=2,
   at=maj$tick, label=maj$text);
min <- subset(mlt$allLabelsDF, type \%in\% "minor");
axis(1, las=2, cex.axis=0.7,
   at=min$tick, label=min$text,
   col="blue");
text(x=log10(1+c(0,5,50,1000)), y=rep(1.7, 4),
   label=c(0,5,50,1000), srt=90);

nullPlot(xlim=c(-4,10), doMargins=FALSE);
axis(3, las=2);
minorLogTicksAxis(1, logBase=2, displayBase=10, symmetricZero=TRUE);

nullPlot(xlim=c(-4,10), doMargins=FALSE);
axis(3, las=2);
minorLogTicksAxis(1, logBase=2, displayBase=10, labelValueOffset=1);
x2 <- rnorm(1000) * 40;
d2 <- density(log2(1+abs(x2)) * ifelse(x2<0, -1, 1));
lines(x=d2$x, y=normScale(d2$y)+1, col="green4");

nullPlot(xlim=c(0,10), doMargins=FALSE);
axis(3, las=2);
minorLogTicksAxis(1, logBase=2, displayBase=10, labelValueOffset=1);
x1 <- c(0, 5, 15, 200);
text(y=rep(1.0, 4), x=log2(1+x1), label=x1, srt=90, adj=c(0,0.5));
points(y=rep(0.95, 4), x=log2(1+x1), pch=20, cex=2, col="blue");


}
