% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-colors.r
\name{setTextContrastColor}
\alias{setTextContrastColor}
\title{Define visible text color}
\usage{
setTextContrastColor(color, hclCutoff = 60, rgbCutoff = 127,
  colorModel = c("hcl", "rgb"), useGrey = 0, keepAlpha = FALSE,
  bg = par("bg"), ...)
}
\arguments{
\item{color}{character vector with one or more R-compatible colors.}

\item{hclCutoff}{numeric threshold above which a color is judged to be
bright, therefore requiring a dark text color. This comparison uses the
L value from the \code{\link{col2hcl}} function, which scales colors from
1 to 100.}

\item{rgbCutoff}{numeric threshold above which a color is judged to be
bright, therefore requiring a dark text color. The mean r,g,b value is
used.}

\item{colorModel}{Either 'hcl' or 'rgb' to indicate how the colors
will be judged for overall brightness. The 'hcl' method uses the L
value, which more reliably represents overall visible lightness.}

\item{useGrey}{numeric threshold used to define dark and bright text colors,
using the R greyscale gradient from 0 to 100. useGrey=10 implies
'grey10' and 'grey90' for the contrasting text colors.
useGrey=15 is useful if labels may also overlap white or black space,
since the text will never be fully white or black.}

\item{keepAlpha}{logical indicates whether the input color alpha
transparency should be maintained in the text color. By default, text
alpha is not maintained, and instead is set to alpha=1, fully
opaque.}

\item{bg}{vector of R colors, used as a background when determining the
brightness of a semi-transparent color. The corresponding brightness
value from the \code{bg} is applied via weighted mean to the input
\code{color} brightness, the result is compared the the relevant cutoff.
By default \code{graphics::par("bg")} is used to determine the default
plot background color.}

\item{...}{additional arguments are ignored.}
}
\description{
Given a vector or colors, define a contrasting color for text,
typically using either white or black.
}
\examples{
color <- c("red","yellow","lightblue","blue4");
setTextContrastColor(color);

# by default, showColors() uses setTextContrastColors() on labels
showColors(color)

# demonstrate the effect of alpha transparency
colorL <- lapply(nameVector(c(1,0.7, 0.6, 0.4)), function(i){
   nameVector(alpha2col(color, alpha=i), color);
})
jamba::showColors(colorL, groupCellnotes=FALSE)

# change background to dark blue
bg <- par("bg");
par("bg"="navy");
jamba::showColors(colorL, groupCellnotes=FALSE)
par("bg"=bg);

}
\seealso{
Other jam color functions: \code{\link{alpha2col}},
  \code{\link{applyCLrange}}, \code{\link{col2alpha}},
  \code{\link{col2hcl}}, \code{\link{col2hsv}},
  \code{\link{color2gradient}}, \code{\link{fixYellowHue}},
  \code{\link{fixYellow}}, \code{\link{getColorRamp}},
  \code{\link{hcl2col}}, \code{\link{hsv2col}},
  \code{\link{isColor}}, \code{\link{kable_coloring}},
  \code{\link{makeColorDarker}}, \code{\link{make_styles}},
  \code{\link{rgb2col}}, \code{\link{setCLranges}},
  \code{\link{showColors}}, \code{\link{unalpha}},
  \code{\link{warpRamp}}
}
\concept{jam color functions}
