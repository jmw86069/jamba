% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-showcolors.R
\name{showColors}
\alias{showColors}
\title{Show colors from a vector or list}
\usage{
showColors(
  x,
  labelCells = NULL,
  transpose = FALSE,
  srtCellnote = NULL,
  adjustMargins = TRUE,
  makeUnique = FALSE,
  ...
)
}
\arguments{
\item{x}{one of these input types:
\itemize{
\item \code{character} vector of colors
\item \code{function} to produce colors, for example \code{circlize::colorRamp2()}
\item \code{list} with any combination of \code{character} or \code{function}
}}

\item{labelCells}{\code{logical} whether to label colors atop the color itself.
If NULL (default) it will only display labels with 40 or fewer items
on either axis.}

\item{transpose}{\code{logical} whether to transpose the colors to display
top-to-bottom, instead of left-to-right.}

\item{srtCellnote}{\code{numeric} angle to rotate text when
\code{labelCells=TRUE}. When set to NULL, labels are vertical
srtCellnote=90 when \code{transpose=FALSE} and horizontal
srtCellnote=0 when \code{transpose=TRUE}.}

\item{adjustMargins}{\code{logical} indicating whether to call
\code{adjustAxisLabelMargins()} to adjust the x- and y-axis
label margins to accomodate the label size.}

\item{makeUnique}{\code{logical} indicating whether to display only the first
unique color. When \code{x} is supplied as a \code{list} this operation will
display the first unique color for each \code{list} element.
Also, when \code{x} is a \code{list}, just to be fancy, \code{makeUnique}
is recycled to \code{length(x)} so certain list elements can display
unique values, while others display all values.}

\item{...}{additional parameters are passed to \code{imageByColors()}.}
}
\value{
invisible color \code{matrix} used in \code{imageByColors()}. When
the input \code{x} is empty, or cannot be converted to colors when
\code{x} contains a \code{function}, the output returns \code{NULL}.
}
\description{
Show colors from a vector or list
}
\details{
This function simply displays colors for review, using
\code{imageByColors()} to display colors and labels across the
plot space.

When supplied a \code{list}, each row in \code{imageByColors()} represents
an entry in the \code{list}. Nothing fancy.
}
\examples{
x <- color2gradient(list(Reds=c("red"), Blues=c("blue")), n=c(4,7));
showColors(x);

showColors(getColorRamp("firebrick3"))

if (suppressPackageStartupMessages(require(RColorBrewer))) {
   y <- lapply(nameVector(RColorBrewer:::namelist), function(i){
      j <- RColorBrewer::brewer.pal(20, i);
      nameVector(j, seq_along(j));
   });
   showColors(y, cexCellnote=0.6, cex.axis=0.7, main="Brewer Colors");
}
if (suppressPackageStartupMessages(require(viridis))) {
   # given one function name it will display discrete colors
   showColors(viridis)
   # a list of functions will show each function output
   showColors(list(viridis=viridis,
      inferno=inferno))

   # grab the full viridis color map
   z <- rgb2col(viridis.map[,c("R","G","B")]);
   # split the colors into a list
   viridis_names <- c(A="magma",
      B="inferno",
      C="plasma",
      D="viridis",
      E="cividis",
      F="rocket",
      G="mako",
      H="turbo")
   y <- split(z,
      paste0(viridis.map$opt, ": ",
      viridis_names[viridis.map$opt]));
   showColors(y, labelCells=TRUE, xaxt="n", main="viridis.map colors");
}

# demonstrate makeUnique=TRUE
j1 <- getColorRamp("rainbow", n=7);
names(j1) <- seq_along(j1);
j2 <- rep(j1, each=3);
names(j2) <- makeNames(names(j2), suffix="_rep");
j2
showColors(list(
   j1=j1,
   j2=j2,
   j3=j2),
   makeUnique=c(FALSE, FALSE, TRUE))

}
\seealso{
Other jam plot functions: 
\code{\link{adjustAxisLabelMargins}()},
\code{\link{coordPresets}()},
\code{\link{decideMfrow}()},
\code{\link{drawLabels}()},
\code{\link{getPlotAspect}()},
\code{\link{groupedAxis}()},
\code{\link{imageByColors}()},
\code{\link{imageDefault}()},
\code{\link{minorLogTicksAxis}()},
\code{\link{nullPlot}()},
\code{\link{plotPolygonDensity}()},
\code{\link{plotRidges}()},
\code{\link{plotSmoothScatter}()},
\code{\link{shadowText}()},
\code{\link{smoothScatterJam}()},
\code{\link{sqrtAxis}()},
\code{\link{usrBox}()}

Other jam color functions: 
\code{\link{alpha2col}()},
\code{\link{applyCLrange}()},
\code{\link{col2alpha}()},
\code{\link{col2hcl}()},
\code{\link{col2hsl}()},
\code{\link{col2hsv}()},
\code{\link{color2gradient}()},
\code{\link{fixYellowHue}()},
\code{\link{fixYellow}()},
\code{\link{getColorRamp}()},
\code{\link{hcl2col}()},
\code{\link{hsl2col}()},
\code{\link{hsv2col}()},
\code{\link{isColor}()},
\code{\link{kable_coloring}()},
\code{\link{makeColorDarker}()},
\code{\link{make_html_styles}()},
\code{\link{make_styles}()},
\code{\link{rgb2col}()},
\code{\link{setCLranges}()},
\code{\link{setTextContrastColor}()},
\code{\link{unalpha}()},
\code{\link{warpRamp}()}
}
\concept{jam color functions}
\concept{jam plot functions}
