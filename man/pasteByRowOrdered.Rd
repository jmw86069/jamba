% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba.r
\name{pasteByRowOrdered}
\alias{pasteByRowOrdered}
\title{Paste data.frame rows into an ordered factor}
\usage{
pasteByRowOrdered(
  x,
  sep = "_",
  na.rm = TRUE,
  condenseBlanks = TRUE,
  includeNames = FALSE,
  na.last = TRUE,
  ...
)
}
\arguments{
\item{x}{data.frame}

\item{sep}{character separator to use between columns}

\item{na.rm}{logical whether to remove NA values, or include them as "NA"}

\item{condenseBlanks}{logical whether to condense blank or empty values
without including an extra delimiter between columns.}

\item{includeNames}{logical whether to include the colname delimited
prior to the value, using sepName as the delimiter.}

\item{na.last}{\code{logical} passed to \code{base::factor()} to determine whether
\code{NA} values are first or last in factor level order.}

\item{...}{additional arguments are passed to \code{jamba::pasteByRow()},
and to \code{jamba::mixedSortDF()}.}
}
\description{
Paste data.frame rows into an ordered factor
}
\details{
This function is an extension to \code{jamba::pasteByRow()} which
pastes rows from a \code{data.frame} into a character vector. This
function defines factor levels by running \code{jamba::mixedSortDF(unique(x))}
and calling \code{jamba::pasteByRow()} on the result. Therefore the
original order of the input \code{x} is maintained while the factor
levels are based upon the appropriate column-based sort.

Note that the \code{...} additional arguments are
passed to \code{jamba::mixedSortDF()} to customize the column-based
sort order, used to define factor levels. A good way to test the
order of factors is to run \code{jamba::mixedSortDF(unique(x))} with
appropriate arguments, and confirm the rows are ordered as expected.

Note also that \code{jamba::mixedSortDF()} uses \code{jamba::mixedSort()}
which itself performs alphanumeric sort in order to keep
values in proper numeric order where possible.
}
\examples{
f <- LETTERS;
df <- data.frame(A=f[rep(1:3, each=2)],
   B=c(NA, f[3]),
   C=c(NA, NA, f[2]))
df
jamba::mixedSortDF(df)
jamba::mixedSortDF(df, na.last=FALSE)

jamba::pasteByRowOrdered(df)
jamba::pasteByRowOrdered(df, na.last=FALSE)

}
\seealso{
Other jam string functions: 
\code{\link{asSize}()},
\code{\link{breaksByVector}()},
\code{\link{cPasteSU}()},
\code{\link{cPasteS}()},
\code{\link{cPasteUnique}()},
\code{\link{cPasteU}()},
\code{\link{cPaste}()},
\code{\link{fillBlanks}()},
\code{\link{formatInt}()},
\code{\link{gsubOrdered}()},
\code{\link{makeNames}()},
\code{\link{mixedOrder}()},
\code{\link{mixedSortDF}()},
\code{\link{mixedSorts}()},
\code{\link{mixedSort}()},
\code{\link{mmixedOrder}()},
\code{\link{nameVectorN}()},
\code{\link{nameVector}()},
\code{\link{padInteger}()},
\code{\link{padString}()},
\code{\link{pasteByRow}()},
\code{\link{tcount}()},
\code{\link{ucfirst}()},
\code{\link{uniques}()}
}
\concept{jam string functions}
