% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-string.r
\name{relist_named}
\alias{relist_named}
\title{relist a vector which allows re-ordered names}
\usage{
relist_named(x, skeleton, ...)
}
\arguments{
\item{x}{vector to be applied to the \code{skeleton} list
structure in order.}

\item{skeleton}{\code{list} object representing the desired
final list structure, or \code{vector} when the input
data \code{x} should be returned as-is, without change.
Specifically, when \code{skeleton} is a \code{vector}, the
\code{names(x)} are maintained without change.}

\item{...}{additional arguments are ignored.}
}
\value{
\code{list} object with the same structure as the \code{skeleton}.
}
\description{
relist a vector which allows re-ordered names
}
\details{
This function is a simple update to \code{utils::relist()}
that allows updating the names of each list element.
More specifically, this function does not replace the
updated names with the corresponding names from
the list \code{skeleton}, as is the case in
\code{utils:::relist.default()}.

It is somewhat surprising that \code{utils::relist()} is
simply a nested for loop, instead of \code{rapply()} or some
fancy vectorized alternative. That said, the function works,
and there is much to be commended for functions that work.
}
\seealso{
Other jam list functions: \code{\link{cPasteUnique}},
  \code{\link{cPaste}}, \code{\link{list2df}},
  \code{\link{mergeAllXY}}, \code{\link{mixedSorts}},
  \code{\link{rbindList}}, \code{\link{rlengths}},
  \code{\link{sclass}}, \code{\link{sdim}},
  \code{\link{ssdim}}, \code{\link{uniques}},
  \code{\link{unnestList}}
}
\concept{jam list functions}
