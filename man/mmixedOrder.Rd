% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-string.r
\name{mmixedOrder}
\alias{mmixedOrder}
\title{order alphanumeric values from a list}
\usage{
mmixedOrder(
  ...,
  na.last = TRUE,
  decreasing = FALSE,
  verbose = FALSE,
  ignore.case = TRUE,
  matrixAsDF = TRUE
)
}
\arguments{
\item{...}{parameters treated as a list of vectors to be ordered in
proper order, based upon the mechanism by \code{\link[base]{order}}.}

\item{na.last, decreasing, verbose, ignore.case}{parameters sent to
\code{mixedOrder()} and \code{base::order()}.}

\item{matrixAsDF}{logical if \code{...} supplies only one matrix object,
whether to convert it to data.frame, the coerce to a list, before
processing. By default, in the event only one matrix object is supplied,
this conversion is performed, in order to define a sort order based upon
each column in order.}
}
\value{
integer vector of row orders
}
\description{
order alphanumeric values from a list
}
\details{
This function is a minor extension to \code{mixedOrder()} ("multiple mixedOder")
which accepts list input, similar to how \code{base::order()} operates.
This function is mainly useful when sorting something like a
data.frame, where ties in column 1 should be maintained then
broken by non-equal values in column 2, and so on.

This function essentially converts any non-numeric column
to a factor, whose levels are sorted using \code{mixedOrder()}.
That factor is converted to numeric value, multiplied by \code{-1}
when \code{decreasing=TRUE}. Finally the list of numeric vectors
is passed to \code{base::order()}.

In fact, \code{mixedSortDF()} calls this \code{mmixedOrder()} function,
in order to sort a \code{data.frame} properly by column.

See \code{mixedOrder()} and \code{mixedSort()} for a better
description of how the sort order logic operates.
}
\seealso{
Other jam sort functions: 
\code{\link{mixedOrder}()},
\code{\link{mixedSortDF}()},
\code{\link{mixedSorts}()},
\code{\link{mixedSort}()}

Other jam string functions: 
\code{\link{asSize}()},
\code{\link{breaksByVector}()},
\code{\link{cPasteSU}()},
\code{\link{cPasteS}()},
\code{\link{cPasteUnique}()},
\code{\link{cPasteU}()},
\code{\link{cPaste}()},
\code{\link{fillBlanks}()},
\code{\link{formatInt}()},
\code{\link{gsubOrdered}()},
\code{\link{makeNames}()},
\code{\link{mixedOrder}()},
\code{\link{mixedSortDF}()},
\code{\link{mixedSorts}()},
\code{\link{mixedSort}()},
\code{\link{nameVectorN}()},
\code{\link{nameVector}()},
\code{\link{padInteger}()},
\code{\link{padString}()},
\code{\link{pasteByRowOrdered}()},
\code{\link{pasteByRow}()},
\code{\link{tcount}()},
\code{\link{ucfirst}()},
\code{\link{uniques}()}

Other jam string functions: 
\code{\link{asSize}()},
\code{\link{breaksByVector}()},
\code{\link{cPasteSU}()},
\code{\link{cPasteS}()},
\code{\link{cPasteUnique}()},
\code{\link{cPasteU}()},
\code{\link{cPaste}()},
\code{\link{fillBlanks}()},
\code{\link{formatInt}()},
\code{\link{gsubOrdered}()},
\code{\link{makeNames}()},
\code{\link{mixedOrder}()},
\code{\link{mixedSortDF}()},
\code{\link{mixedSorts}()},
\code{\link{mixedSort}()},
\code{\link{nameVectorN}()},
\code{\link{nameVector}()},
\code{\link{padInteger}()},
\code{\link{padString}()},
\code{\link{pasteByRowOrdered}()},
\code{\link{pasteByRow}()},
\code{\link{tcount}()},
\code{\link{ucfirst}()},
\code{\link{uniques}()}
}
\concept{jam sort functions}
\concept{jam string functions}
