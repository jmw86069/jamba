% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba.r
\name{applyCLrange}
\alias{applyCLrange}
\title{Apply CL color range}
\usage{
applyCLrange(x, Crange = NULL, Lrange = NULL, Cgrey = 5,
  fixYellow = TRUE, ...)
}
\arguments{
\item{x}{vector of R colors}

\item{Crange}{NULL or numeric vector with minimum and maximum allowed
values for the chroma (C) component.}

\item{Lrange}{NULL or numeric vector with minimum and maximum allowed
values for the luminance (L) component.}

\item{Cgrey}{numeric chroma (C) value, which defines grey colors at or
below this chroma. Any colors at or below the grey cutoff will have
their C values unchanged. This mechanism prevents converting black
to red, for example. To disable the effect, set \code{Cgrey=-1}.}

\item{fixYellow}{boolean indicating whether to "fix" the darkening of
yellow, which otherwise turns to green. Instead, since JAM can,
JAM will make the yellow slightly more golden before darkening,
which is achieved by calling \code{fixYellowHue()}.}

\item{...}{additional argyments are passed to \code{fixYellowHue()} when
\code{fixYellow} is \code{TRUE}.}
}
\value{
vector of colors after applying the chroma (C) and luminance (L)
ranges.
}
\description{
Apply chroma (C) and luminance (L) ranges to a vector of R colors
}
\details{
This function is primarily intended to restrict the range of brightness
values so they contrast with a background color, particularly when the
background color may be bright or dark in different scenarios.

The C and L values are defined by \code{colorspace::polarLUV()}, where C is
typically restricted to \code{0..100} and L is typically \code{0..100}. For some
colors, values above 100 are allowed.

Values are restricted to the given numeric range using \code{jamba::noiseFloor}
and \code{min()} and \code{max()} values for the \code{minimum} and \code{ceiling},
respectively.
}
\examples{
applyCLrange(c("red","blue","yellow"), Lrange=c(0,60));

}
