% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamba-export.r
\name{readOpenxlsx}
\alias{readOpenxlsx}
\title{Import one or more data.frame from Excel xlsx format}
\usage{
readOpenxlsx(
  xlsx,
  sheet = NULL,
  startRow = 1,
  rows = NULL,
  check.names = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{xlsx}{\code{character} path to an Excel file in \code{xlsx} format,
compatible with \code{openxlsx::read.xlsx()}.}

\item{sheet}{one of \code{NULL}, \code{character}, or \code{integer} vector,
where: \code{sheet=NULL} will import every sheet; \code{character} is
a vector of sheet names; and \code{integer} is a vector of sheet
index values. The sheet names are determined with
\code{openxlsx::getSheetNames()}.}

\item{startRow}{\code{integer} indicating the row number to start
importing each \code{sheet}. Note that \code{startRow} can be a vector
with length \code{length(sheet)}, to specify the \code{startRow} for
each \code{sheet}.}

\item{rows}{\code{integer} vector indicating specific rows to import
for each \code{sheet}. To specify different \code{rows} for each \code{sheet},
supply \code{rows} as a \code{list} of \code{integer} vectors.}

\item{check.names}{\code{logical} indicating whether to call \code{make.names()}
on the \code{colnames} of each \code{data.frame}.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are passed to \code{openxlsx::read.xlsx()}.}
}
\description{
Import one or more data.frame from Excel xlsx format
}
\details{
This function is equivalent to \code{openxlsx::read.xlsx()}
with a few minor additions:
\enumerate{
\item It returns a \code{list} of \code{data.frame} objects, one per \code{sheet}.
\item It properly reads the \code{colnames} with \code{check.names=FALSE}.
}

By default this function returns every \code{sheet} for a given
\code{xlsx} file.
}
\seealso{
Other jam export functions: 
\code{\link{applyXlsxCategoricalFormat}()},
\code{\link{applyXlsxConditionalFormat}()},
\code{\link{set_xlsx_colwidths}()},
\code{\link{set_xlsx_rowheights}()},
\code{\link{writeOpenxlsx}()}
}
\concept{jam export functions}
